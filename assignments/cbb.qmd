```{r}
library(tidyverse)
library(Hmisc)
```

```{r}
logs <- read_csv("https://dwillis.github.io/sports-data-files/cbblogs1524.csv")
```
```{r}
logs <- logs |> mutate(
  Differential = TeamScore - OpponentScore, 
  NetRebounds = TeamTotalRebounds - OpponentTotalRebounds,
  TurnoverMargin = TeamTurnovers - OpponentTurnovers)
```

```{r}
rebounds_turnovers <- lm(Differential ~ NetRebounds + TurnoverMargin +TeamOffRebounds, data=logs)
summary(rebounds_turnovers)
```
```{r}
simplelogs <- logs |> select_if(is.numeric) |> select(-Game) |> select(Differential, NetRebounds, TurnoverMargin, TeamFGPCT, TeamTotalRebounds, OpponentFGPCT, OpponentTotalRebounds)
```

```{r}
cormatrix <- rcorr(as.matrix(simplelogs))

cormatrix$r
```

```{r}
model2 <- lm(Differential ~ NetRebounds + TurnoverMargin + TeamFGPCT + OpponentFGPCT, data=logs)
summary(model2)
```
```{r}
logs |> 
  filter(Team == "Michigan" & Season == '2020-2021' | Team == "Wisconsin" & Season == '2019-2020' | Team == "Michigan State" & Season == '2018-2019' | Team == "Michigan State" & Season == '2017-2018' | Team == 'Illinois' & Season == '2021-2022' | Team == 'Purdue' & Season == '2022-2023' | Team == 'Purdue' & Season == '2023-2024') |> 
  summarise(
    meanNetRebounds = mean(NetRebounds),
    meanTurnoverMargin = mean(TurnoverMargin),
    meanTeamFGPCT = mean(TeamFGPCT),
    meanOpponentFGPCT = mean(OpponentFGPCT)
  )
```

```{r}
# (netrebounds estimate * meanNetRebounds) + (turnover margin estimate * meanTurnoverMargin) + (TeamFGPCT estimate * meanTeamFGPCT) + (OpponentFGPCT estimate * meanOpponentFGPCT) + Intercept
(9.606796	*0.656535) + (1.966019*-1.311144) + (0.4772621*91.270480 ) + (0.3989272	*-91.510307) + 0.226590
```

```{r}
logs |> 
  filter(
    Team == "Maryland" & Season == '2023-2024'
    ) |> 
  summarise(
    meanNetRebounds = mean(NetRebounds),
    meanTurnoverMargin = mean(TurnoverMargin),
    meanTeamFGPCT = mean(TeamFGPCT),
    meanOpponentFGPCT = mean(OpponentFGPCT)
  )
```
```{r}
(1.272727		*0.656535) + (-0.3939394	*-1.311144) + (0.413697	*91.270480 ) + (0.419	*-91.510307) + 0.226590
```

```{r}
logs |> 
     filter(
         Team == "Maryland" & Season == '2023-2024'
     ) |> summarise(avg_score = mean(TeamScore), avg_opp = mean(OpponentScore))
```

RESIDUALS
```{r}
logs <- read_csv("https://dwillis.github.io/sports-data-files/cbblogs1524.csv")
```
```{r}
residualmodel <- logs |> mutate(differential = TeamScore - OpponentScore, FGPctMargin = TeamFGPCT - OpponentFGPCT)

```

```{r}
fit <- lm(differential ~ FGPctMargin, data = residualmodel)
summary(fit)
```
```{r}
residualmodel <- residualmodel |> 
  filter(!is.na(FGPctMargin)) |>
  mutate(predicted = predict(fit), residuals = residuals(fit))

```

```{r}
residualmodel |> filter(Conference == 'Big Ten') |> arrange(desc(residuals)) |> select(Date, Team, Opponent, W_L, differential, FGPctMargin, predicted, residuals)
```

TRYING WITH TRUE SHOOTING PERCENTAGE

```{r}
logs <- logs |>
  mutate(
    True_Sh_Pct = TeamScore/ (2 * TeamFGA + 0.44 * TeamFTA),
    Opp_true_sh = OpponentScore/ (2 * OpponentFGA + 0.44 * OpponentFTA)
    ) 
```

```{r}
logs <- logs |>
  mutate(
    true_sh_differential = True_Sh_Pct - Opp_true_sh
  )
```

```{r}
tsh <- lm(Differential ~ true_sh_differential, data = logs)
summary(tsh)
```

