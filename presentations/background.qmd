```{r}
library(tidyverse)
library(dplyr)
install.packages("baseballr")
```
I had lots of trouble with my initial plan, so I decided to pivot to something else. I wanted to stay on a baseball topic because it feels like one of the more data-centric sports, and one of the most commonly used baseball data sources is baseball savant, which has become a huge deal among baseball fans. For my project, I wanted to see how much their biggest metrics (selected below) correlate to more widely-known stats like batting average, OPS, home runs, WAR, etc. — and as a result, see which of their metrics are most indicative of success.
```{r}
baseball_savant <- stats |>
  select(`last_name, first_name`, year, player_id, sweet_spot_percent, barrel_batted_rate, hard_hit_percent, avg_best_speed)
```


Now I have season recaps of 4 key savant stats from every player who's played in the last decade. Those stats:
Sweet_spot_percent: "A batted-ball event with a launch angle between eight and 32 degrees."
barrel_batted_rate:"[rate of] A batted ball with the perfect combination of exit velocity and launch angle"
hard_hit_percent: "[percentage of hits] Statcast defines a 'hard-hit ball' as one hit with an exit velocity of 95 mph or higher."
avg_best_speed: "[The] average of the hardest 50% of his batted balls."

Taking a look at the leaders in each stat:

```{r}
top_n(baseball_savant, 10, sweet_spot_percent)
```

```{r}
top_n(baseball_savant, 10, barrel_batted_rate)
```

```{r}
top_n(baseball_savant, 10, hard_hit_percent)
```

```{r}
top_n(baseball_savant, 10, avg_best_speed)
```
These top 10s give me a general idea of each of the savant stats. My next step is to join these stats with the traditional season stats so I can then figure out what the correlation is between the two.

Loading in standard stats:
```{r}
baseball_ref_24 <- read_csv("https://www.baseball-reference.com/leagues/majors/2024-standard-batting.shtml#players_standard_batting")
```

Using fangraphs as centralized source for the stats on savant and traditional stats:
```{r}
all_stats <- read_csv("Fangraphs_stats_Sheet1") |>
  mutate(ab_hr = AB/HR)
```


Loading in standard stats:
```{r}
baseball_ref_24 <- read_csv("https://www.baseball-reference.com/leagues/majors/2024-standard-batting.shtml#players_standard_batting")
```

Using fangraphs as centralized source for the stats on savant and traditional stats:
```{r}
all_stats <- read_csv("~/Documents/GitHub/jour479x_fall_2024/presentations/Fangraphs stats - Sheet1.csv") |>
  mutate(ab_hr = AB/HR) 
  all_stats <- all_stats %>% rename(barrel_pct = `Barrel%`, hard_hit_pct = `HardHit%`) |>
    filter(!is.na(ab_hr) == TRUE,
           !is.na(EV) == TRUE,
           !is.na(barrel_pct) == TRUE,
           !is.na(hard_hit_pct) == TRUE)
all_stats <- all_stats |>
  mutate(
  barrel_rate = all_stats$barrel_pct <- as.numeric(gsub("%", "", all_stats$barrel_pct)) / 100,
  hard_hit_rate = all_stats$hard_hit_pct <- as.numeric(gsub("%", "", all_stats$hard_hit_pct)) / 100)

```
```{r}
top_n(all_stats, 10, EV)|>
  arrange(desc(EV))
```
```{r}
top_n(all_stats, 10, maxEV) |>
  arrange(desc(maxEV))
```
```{r}
top_n(all_stats, 10, barrel_pct)
```

These top 10s give me a general idea of each of the savant stats. My next step is to join these stats with the traditional season stats so I can then figure out what the correlation is between the two.


```{r}
all_stats_seasons_mean <- all_stats |>
  group_by(Season) |>
  summarise(barrel_rate = mean(barrel_rate),
            hard_hit_rate = mean(hard_hit_rate),
            maxEV = mean(maxEV),
            EV = mean(EV))

```
```{r}
all_stats_seasons_median <- all_stats |>
  group_by(Season) |>
  summarise(barrel_rate = median(barrel_rate),
            hard_hit_rate = median(hard_hit_rate),
            maxEV = median(maxEV),
            EV = median(EV))
```


The most interesting finding here, based on both the means and medians, is how the barrel rate has increased over the last decade.

```{r}
trad_stats <- read_csv("~/Downloads/trad stats - Sheet1.csv")
```


```{r}
barrel_avg <- lm(AVG ~ barrel_rate, data = all_stats)
summary(barrel_avg)
```
```{r}
barrel_ops <- lm(OPS ~ barrel_rate, data = all_stats)
summary(barrel_ops)
```
```{r}
no_straw <- all_stats |>
  filter(HR>0)
```
I had to remove one player (Myles Straw) to run the regression on AB/HR and barrel rate as he didn't hit a homer so his AB/HR is infinite.

```{r}
barrel_hr <- lm(ab_hr ~ barrel_rate, data = no_straw)
summary(barrel_hr)
```
```{r}
barrel_hr_2 <- lm(HR ~ barrel_rate, data = all_stats)
summary(barrel_hr_2)
```
```{r}
barrel_slg <- lm(SLG ~ barrel_rate, data = all_stats)
summary(barrel_slg)
```
The clear trend here is that the barrel rate ties into power stats, and not average. We see high R-squared in HR, OPS, Slugging, with a lower one in average.

```{r}
EV_avg <- lm(AVG ~ EV, data = all_stats)
summary(EV_avg)
```

```{r}
EV_ops <- lm(OPS ~ EV, data = all_stats)
summary(EV_ops)
```

```{r}
no_straw <- all_stats |>
  filter(HR>0)
```

```{r}
EV_hr <- lm(ab_hr ~ EV, data = no_straw)
summary(EV_hr)
```

```{r}
EV_hr_2 <- lm(HR ~ EV, data = all_stats)
summary(EV_hr_2)
```

```{r}
EV_slg <- lm(SLG ~ EV, data = all_stats)
summary(EV_slg)
```

A players average exit velocity has little correlation with their performance, though the strongest correlation comes from power statistics as well. 


```{r}
maxEV_avg <- lm(AVG ~ maxEV, data = all_stats)
summary(maxEV_avg)
```

```{r}
maxEV_ops <- lm(OPS ~ maxEV, data = all_stats)
summary(maxEV_ops)
```

```{r}
no_straw <- all_stats |>
  filter(HR>0)
```

```{r}
maxEV_hr <- lm(ab_hr ~ maxEV, data = no_straw)
summary(maxEV_hr)
```

```{r}
maxEV_hr_2 <- lm(HR ~ maxEV, data = all_stats)
summary(maxEV_hr_2)
```

```{r}
maxEV_slg <- lm(SLG ~ maxEV, data = all_stats)
summary(maxEV_slg)
```
Again, very little correlation. Even less, actually. 



```{r}
hh_avg <- lm(AVG ~ hard_hit_rate, data = all_stats)
summary(hh_avg)
```

```{r}
hh_ops <- lm(OPS ~ hard_hit_rate, data = all_stats)
summary(hh_ops)
```

```{r}
no_straw <- all_stats |>
  filter(HR>0)
```

```{r}
hh_hr <- lm(ab_hr ~ hard_hit_rate, data = no_straw)
summary(hh_hr)
```

```{r}
hh_hr_2 <- lm(HR ~ hard_hit_rate, data = all_stats)
summary(hh_hr_2)
```

```{r}
hh_slg <- lm(SLG ~ hard_hit_rate, data = all_stats)
summary(hh_slg)
```
This one is a little surprising to me, as I thought it'd be up there with barrel rate — however, we see that the correlation between hard hit rate and the traditional performance metrics do not have the same level of correlation, and are similar to some of the exit velos correlations too.

```{r}
no_2020 <- all_stats |>
  filter(Season != 2020)

```
Removing 2020 so I can use weight as HR 
```{r}
HR_50 <- no_2020 |>
  filter(HR>49)
```

Making new set for 50+ HR
```{r}
ggplot() + 
  geom_point(
    data=no_2020, aes(x=OPS, y=barrel_rate, size = HR
    ), alpha = .3)+
  geom_point(
    data=HR_50, aes(x=OPS, y=barrel_rate, size = HR), color = "red")+
  labs(
    title="More barrels = more bombs?", 
    subtitle = "Among modern batted ball statistics, barrel rate is the most indicative of success",
    caption = "Red circles = 50+ home run seasons",
    x="On Base plus Slugging Percentage", 
    y="Barrel Rate") + 
theme_minimal()
```
```{r}

percentile <- no_2020 %>%
  mutate(
    AVG_percentile = ntile(AVG, 100),
    SLG_percentile = ntile(SLG, 100),
    OPS_percentile = ntile(OPS, 100), 
    HR_percentile = ntile(HR, 100),
    hard_hit_percentile = ntile(hard_hit_rate, 100),
    barrel_percentile = ntile(barrel_rate, 100),
    EV_percentile = ntile(EV, 100),
    maxEV_percentile = ntile(maxEV, 100)
  )

```

Turning it into percentiles to make bar charts — some of the best ones just dominate everything
```{r}
judge_joey <- percentile |>
  filter((Name == "Aaron Judge" & Season == 2024) | 
         (Name == "Joey Votto" & Season == 2017)) |>
  select(Name,Season,AVG_percentile,SLG_percentile,OPS_percentile, HR_percentile, hard_hit_percentile, barrel_percentile,EV_percentile,  maxEV_percentile)

judge_24 <- judge_24 
  stat = c("AVG_percentile", "SLG_percentile", "OPS_percentile", "HR_percentile", "Hard Hit_percentile", "Barrel_percentile", "EV_percentile", "Max EV_percentile")
```
Had some help with ChatGPT for the following — couldn't figure out hte clustering aspect.
```{r}
judge_joey <- data.frame(
  Name = c("Aaron Judge", "Joey Votto"),
  Season = c(2024, 2017),
  AVG_percentile = c(98, 98),
  SLG_percentile = c(100, 97),
  OPS_percentile = c(100, 99),
  HR_percentile = c(100, 90),
  hard_hit_percentile = c(100, 18),
  barrel_percentile = c(100, 61),
  EV_percentile = c(100, 19),
  maxEV_percentile = c(97, 43)
)

judge_joey <- judge_joey|>
  pivot_longer(cols = ends_with("percentile"), 
               names_to = "Metric", 
               values_to = "Percentile")

ggplot(judge_joey, aes(x = Metric, y = Percentile, fill = Name)) + 
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Not all MVP (caliber) seasons are created the same",
       subtitle = "Judge (2024) and Votto (2017) had similar production, but their batted ball stats had no resemblance",
       x = "Metric",
       y = "Percentile",
       fill = "Player") +
  theme_minimal() +
  coord_flip()+
  scale_fill_manual(values = c("Aaron Judge" = "navy", "Joey Votto" = "red"))

```
This shows that ulitmately batted ball stats aren't the end all be all even though they can be important.

https://docs.google.com/presentation/d/14fb0_pVB2NoJzjPR-h8WuXchj5FQgQXH-vksb9CSW5c/edit?usp=sharing


